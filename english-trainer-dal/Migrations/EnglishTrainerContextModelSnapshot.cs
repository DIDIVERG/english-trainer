// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using english_trainer_dal.DAL.Contexts;

#nullable disable

namespace englishtrainerdal.Migrations
{
    [DbContext(typeof(EnglishTrainerContext))]
    partial class EnglishTrainerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AccountInfoMedia", b =>
                {
                    b.Property<int>("AccountInfosId")
                        .HasColumnType("integer")
                        .HasColumnName("account_infos_id");

                    b.Property<int>("MediasId")
                        .HasColumnType("integer")
                        .HasColumnName("medias_id");

                    b.HasKey("AccountInfosId", "MediasId")
                        .HasName("pk_account_info_media");

                    b.HasIndex("MediasId")
                        .HasDatabaseName("ix_account_info_media_medias_id");

                    b.ToTable("account_info_media", (string)null);
                });

            modelBuilder.Entity("AccountInfoTranslations", b =>
                {
                    b.Property<int>("AccountInfosId")
                        .HasColumnType("integer")
                        .HasColumnName("account_infos_id");

                    b.Property<int>("TranslationsId")
                        .HasColumnType("integer")
                        .HasColumnName("translations_id");

                    b.HasKey("AccountInfosId", "TranslationsId")
                        .HasName("pk_account_info_translations");

                    b.HasIndex("TranslationsId")
                        .HasDatabaseName("ix_account_info_translations_translations_id");

                    b.ToTable("account_info_translations", (string)null);
                });

            modelBuilder.Entity("LanguagesPartOfSpeech", b =>
                {
                    b.Property<string>("LanguagesLanguageId")
                        .HasColumnType("character varying(3)")
                        .HasColumnName("languages_language_id");

                    b.Property<int>("PartOfSpeechesId")
                        .HasColumnType("integer")
                        .HasColumnName("part_of_speeches_id");

                    b.HasKey("LanguagesLanguageId", "PartOfSpeechesId")
                        .HasName("pk_languages_part_of_speech");

                    b.HasIndex("PartOfSpeechesId")
                        .HasDatabaseName("ix_languages_part_of_speech_part_of_speeches_id");

                    b.ToTable("languages_part_of_speech", (string)null);
                });

            modelBuilder.Entity("PartOfSpeechWords", b =>
                {
                    b.Property<int>("PartOfSpeechesId")
                        .HasColumnType("integer")
                        .HasColumnName("part_of_speeches_id");

                    b.Property<int>("WordsListId")
                        .HasColumnType("integer")
                        .HasColumnName("words_list_id");

                    b.HasKey("PartOfSpeechesId", "WordsListId")
                        .HasName("pk_part_of_speech_words");

                    b.HasIndex("WordsListId")
                        .HasDatabaseName("ix_part_of_speech_words_words_list_id");

                    b.ToTable("part_of_speech_words", (string)null);
                });

            modelBuilder.Entity("TranslationsWords", b =>
                {
                    b.Property<int>("TranslationsListId")
                        .HasColumnType("integer")
                        .HasColumnName("translations_list_id");

                    b.Property<int>("WordsListId")
                        .HasColumnType("integer")
                        .HasColumnName("words_list_id");

                    b.HasKey("TranslationsListId", "WordsListId")
                        .HasName("pk_translations_words");

                    b.HasIndex("WordsListId")
                        .HasDatabaseName("ix_translations_words_words_list_id");

                    b.ToTable("translations_words", (string)null);
                });

            modelBuilder.Entity("english_trainer_dal.Models.AccountInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language_code");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_account_infos");

                    b.ToTable("account_infos", (string)null);
                });

            modelBuilder.Entity("english_trainer_dal.Models.Languages", b =>
                {
                    b.Property<string>("LanguageId")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("language_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.HasKey("LanguageId")
                        .HasName("pk_languages");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("english_trainer_dal.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("media_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Subtitless")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subtitless");

                    b.Property<string>("VideoCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("video_code");

                    b.HasKey("Id")
                        .HasName("pk_medias");

                    b.ToTable("medias", (string)null);
                });

            modelBuilder.Entity("english_trainer_dal.Models.PartOfSpeech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("part_of_speech_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("info");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_part_of_speeches");

                    b.ToTable("part_of_speeches", (string)null);
                });

            modelBuilder.Entity("english_trainer_dal.Models.Translations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("translation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("translation");

                    b.Property<string>("TranslationCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("translation_code");

                    b.HasKey("Id")
                        .HasName("pk_translations");

                    b.ToTable("translations", (string)null);
                });

            modelBuilder.Entity("english_trainer_dal.Models.Words", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("word_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Transcription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("transcription");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("word");

                    b.HasKey("Id")
                        .HasName("pk_words");

                    b.ToTable("words", (string)null);
                });

            modelBuilder.Entity("AccountInfoMedia", b =>
                {
                    b.HasOne("english_trainer_dal.Models.AccountInfo", null)
                        .WithMany()
                        .HasForeignKey("AccountInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_info_media_account_infos_account_infos_id");

                    b.HasOne("english_trainer_dal.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_info_media_medias_medias_id");
                });

            modelBuilder.Entity("AccountInfoTranslations", b =>
                {
                    b.HasOne("english_trainer_dal.Models.AccountInfo", null)
                        .WithMany()
                        .HasForeignKey("AccountInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_info_translations_account_infos_account_infos_id");

                    b.HasOne("english_trainer_dal.Models.Translations", null)
                        .WithMany()
                        .HasForeignKey("TranslationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_info_translations_translations_translations_id");
                });

            modelBuilder.Entity("LanguagesPartOfSpeech", b =>
                {
                    b.HasOne("english_trainer_dal.Models.Languages", null)
                        .WithMany()
                        .HasForeignKey("LanguagesLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_languages_part_of_speech_languages_languages_language_id");

                    b.HasOne("english_trainer_dal.Models.PartOfSpeech", null)
                        .WithMany()
                        .HasForeignKey("PartOfSpeechesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_languages_part_of_speech_part_of_speeches_part_of_speeches_");
                });

            modelBuilder.Entity("PartOfSpeechWords", b =>
                {
                    b.HasOne("english_trainer_dal.Models.PartOfSpeech", null)
                        .WithMany()
                        .HasForeignKey("PartOfSpeechesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_part_of_speech_words_part_of_speeches_part_of_speeches_id");

                    b.HasOne("english_trainer_dal.Models.Words", null)
                        .WithMany()
                        .HasForeignKey("WordsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_part_of_speech_words_words_words_list_id");
                });

            modelBuilder.Entity("TranslationsWords", b =>
                {
                    b.HasOne("english_trainer_dal.Models.Translations", null)
                        .WithMany()
                        .HasForeignKey("TranslationsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_translations_words_translations_translations_list_id");

                    b.HasOne("english_trainer_dal.Models.Words", null)
                        .WithMany()
                        .HasForeignKey("WordsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_translations_words_words_words_list_id");
                });
#pragma warning restore 612, 618
        }
    }
}
